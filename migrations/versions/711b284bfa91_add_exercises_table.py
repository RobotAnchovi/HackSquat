from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import os

# revision identifiers, used by Alembic.
revision = "711b284bfa91"
down_revision = "a8ea141c44c8"
branch_labels = None
depends_on = None


def upgrade():
    # Determine if the current environment is production or not
    # You might need to adjust this check based on your actual production environment check
    if os.environ.get("FLASK_ENV") == "production":
        exercise_id_type = postgresql.UUID(as_uuid=True)
        user_id_type = postgresql.UUID(as_uuid=True)
    else:
        exercise_id_type = sa.String(length=36)
        user_id_type = sa.String(length=36)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exercises",
        sa.Column("exercise_id", exercise_id_type, nullable=False),
        sa.Column("user_id", user_id_type, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=255), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("exercise_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("exercises")
    # ### end Alembic commands ###
